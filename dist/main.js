(()=>{"use strict";const e=function(e,t){let n=0,i=!1;return{hit:function(){return n+=1,n},getHits:function(){return n},isSunk:function(){return n==e&&(i=!0),i},length:e,shipName:t}},t=function(){let t=function(){let e=[],t=[],n=[],i=[],r=[];function o(e,t){return 10*e+t}function s(e,t,n,r){let s=o(e,t);if("Horizontal"==r)for(let e=0;e<n.length;e++)if(i.includes(s+e))return!1;if("Vertical"==r)for(let e=0;e<n.length;e++)if(i.includes(s+10*e))return!1;return!("Horizontal"==r&&t+n.length>10||"Vertical"==r&&e+n.length>10)}return{createBoard:function(){for(let t=0;t<10;t++)for(let n=0;n<10;n++){let i={coordinates:void 0,name:void 0};i.coordinates=[t,n],i.name=null,e.push(i)}return e},getBoard:function(){return e},checkValidity:s,placeShip:function(t,n,a,l){if("Horizontal"==l&&s(t,n,a,l)){let r=o(t,n);for(let t=0;t<a.length;t++)e[r+t].name=a.shipName,i.push(r+t)}if("Vertical"==l&&s(t,n,a,l)){let r=o(t,n);for(let t=0;t<a.length;t++)e[r+10*t].name=a.shipName,i.push(r+10*t)}r.push(a)},receiveAttack:function(i,s){let a=o(i,s);null!=e[a].name?n.includes(a)||(n.push(a),function(e){for(let t=0;t<r.length;t++)if(r[t].shipName==e)return r[t]}(e[a].name).hit()):t.includes(a)||t.push(a)},isAllSunk:function(){if(i.length==n.length)return!0},getMissedPositions:function(){return t},getAttackedPositions:function(){return n},getShipsPositions:function(){return i}}}(),n=[e(5,"Carrier"),e(4,"Battleship"),e(3,"Cruiser"),e(3,"Submarine"),e(2,"Destroyer")];function i(){return[Math.floor(10*Math.random()),Math.floor(10*Math.random())]}return{randomAttack:function e(t){let n=i(),r=n[0],o=n[1],s=function(e,t){return 10*e+t}(r,o);t.getShotCoordinates().includes(s)?e(t):t.receiveAttack(r,o)},randomPlacement:function e(n){let r=i(),o=r[0],s=r[1],a="";a=1==Math.floor(2*Math.random())?"Horizontal":"Vertical",t.checkValidity(o,s,n,a)?t.placeShip(o,s,n,a):e(n)},getBoard:function(){return t},getShips:function(){return n},getShotCoordinates:function(){return[...t.getAttackedPositions(),...t.getMissedPositions()]},createBoard:t.createBoard,getBoard:t.getBoard,placeShip:t.placeShip,checkValidity:t.checkValidity,receiveAttack:t.receiveAttack,isAllSunk:t.isAllSunk,getMissedPositions:t.getMissedPositions,getAttackedPositions:t.getAttackedPositions,getShipsPositions:t.getShipsPositions}},n=function(){let e=t(),n=t();e.createBoard(),n.createBoard();let i=e.getBoard(),r=n.getBoard(),o=e.getShips(),s=n.getShips(),a="Gamer",l="",c=[];return{gamer:e,computer:n,setInput:function(e){c=e},gameLoop:function(){"Gamer"==a&&(n.receiveAttack(c[0],c[1]),n.isAllSunk()?l="Gamer":(a="Computer",c=[])),"Computer"==a&&(n.randomAttack(e),e.isAllSunk()?l="Computer":a="Gamer"),console.log(l)},getTurn:function(){return a},getWinner:function(){return l},getGamerBoard:function(){return i},getComputerBoard:function(){return r},getGamerShips:function(){return o},getComputerShips:function(){return s}}}(),i=function(){const e=document.querySelector(".display"),t=document.querySelector(".player-board"),r=document.querySelector(".computer-board"),o=document.querySelector(".direction"),s=document.querySelector(".reset");let a=n.getGamerBoard(),l=n.getComputerBoard(),c=[...n.getGamerShips()],d=[...n.getComputerShips()];function u(e){let t=e.classList[1].split(",");return[parseInt(t[0]),parseInt(t[1])]}return window.addEventListener("load",(()=>{e.textContent="Welcome to Battleship. Place your Carrier"})),window.addEventListener("click",(()=>{switch(c.length){case 4:e.textContent="Place your Battleship";break;case 3:e.textContent="Place your Cruiser";break;case 2:e.textContent="Place your Submarine";break;case 1:e.textContent="Place your Destroyer";break;case 0:""==n.getWinner()?e.textContent=`${n.getTurn()}'s Turn`:e.textContent=`${n.getWinner()} Won`}})),function(){let e,i,r=c[0];t.addEventListener("click",(s=>{if(s.target.classList.contains("player-board")){let l=s.target;if(e=u(l)[0],i=u(l)[1],c.length>0&&n.gamer.checkValidity(e,i,r,o.value)){n.gamer.placeShip(e,i,r,o.value),c.shift(),r=c[0];let s=n.gamer.getShipsPositions();for(let e=0;e<s.length;e++)t.children[s[e]].classList.add("player-ship");console.log(a)}}})),t.addEventListener("mouseover",(t=>{if(t.target.classList.contains("grid")){let s=t.target;e=u(s)[0],i=u(s)[1],c.length>0&&n.gamer.checkValidity(e,i,r,o.value)?s.classList.add("green"):c.length>0&&s.classList.add("red")}})),t.addEventListener("mouseout",(e=>{if(e.target.classList.contains("grid")){(t=e.target).classList.remove("green"),t.classList.remove("red")}var t}))}(),o.addEventListener("click",(()=>{"Horizontal"==o.value?(o.value="Vertical",o.textContent="Set Horizontal"):(o.value="Horizontal",o.textContent="Set Vertical")})),function(){let e=d[0];window.addEventListener("click",(()=>{for(;d.length>0;)n.computer.randomPlacement(e),d.shift(),e=d[0];let t=n.computer.getShipsPositions();for(let e=0;e<t.length;e++)r.children[t[e]].classList.add("computer-ship")}))}(),r.addEventListener("click",(e=>{if(0==c.length&&e.target.classList.contains("computer-board")){let t=e.target,i=parseInt(t.classList[0]),r=u(t)[0],o=u(t)[1];n.computer.getShotCoordinates().includes(i)||""!=n.getWinner()||0!=c.length||(n.setInput([r,o]),n.gameLoop())}})),window.addEventListener("click",(()=>{let e=n.gamer.getMissedPositions(),i=n.computer.getMissedPositions(),o=n.gamer.getAttackedPositions(),s=n.computer.getAttackedPositions();for(let n=0;n<e.length;n++)t.children[e[n]].classList.add("missed");for(let e=0;e<i.length;e++)r.children[i[e]].classList.add("missed");for(let e=0;e<o.length;e++)if(t.children[o[e]].classList.add("attacked"),0==t.children[o[e]].children.length){let n=document.createElement("div");n.classList.add("ship-svg"),t.children[o[e]].appendChild(n),n.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><title>ship-wheel</title><path d="M2,11L4.05,11.1C4.3,8.83 5.5,6.85 7.25,5.56L6.13,3.84C5.86,3.36 6,2.75 6.5,2.47C7,2.2 7.59,2.36 7.87,2.84L8.8,4.66C9.78,4.24 10.86,4 12,4C13.14,4 14.22,4.24 15.2,4.66L16.13,2.84C16.41,2.36 17,2.2 17.5,2.47C18,2.75 18.14,3.36 17.87,3.84L16.75,5.56C18.5,6.85 19.7,8.83 19.95,11.1L22,11A1,1 0 0,1 23,12A1,1 0 0,1 22,13L19.95,12.9C19.7,15.17 18.5,17.15 16.75,18.44L17.87,20.16C18.14,20.64 18,21.25 17.5,21.53C17,21.8 16.41,21.64 16.13,21.16L15.2,19.34C14.22,19.76 13.14,20 12,20C10.86,20 9.78,19.76 8.8,19.34L7.87,21.16C7.59,21.64 7,21.8 6.5,21.53C6,21.25 5.86,20.64 6.13,20.16L7.25,18.44C5.5,17.15 4.3,15.17 4.05,12.9L2,13A1,1 0 0,1 1,12A1,1 0 0,1 2,11M9.07,11.35C9.2,10.74 9.53,10.2 10,9.79L8.34,7.25C7.11,8.19 6.27,9.6 6.05,11.2L9.07,11.35M12,9C12.32,9 12.62,9.05 12.9,9.14L14.28,6.45C13.58,6.16 12.81,6 12,6C11.19,6 10.42,6.16 9.72,6.45L11.1,9.14C11.38,9.05 11.68,9 12,9M14.93,11.35L17.95,11.2C17.73,9.6 16.89,8.19 15.66,7.25L14,9.79C14.47,10.2 14.8,10.74 14.93,11.35M14.93,12.65C14.8,13.26 14.47,13.8 14,14.21L15.66,16.75C16.89,15.81 17.73,14.4 17.95,12.8L14.93,12.65M12,15C11.68,15 11.38,14.95 11.09,14.86L9.72,17.55C10.42,17.84 11.19,18 12,18C12.81,18 13.58,17.84 14.28,17.55L12.91,14.86C12.62,14.95 12.32,15 12,15M9.07,12.65L6.05,12.8C6.27,14.4 7.11,15.81 8.34,16.75L10,14.21C9.53,13.8 9.2,13.26 9.07,12.65Z" /></svg>'}for(let e=0;e<s.length;e++)if(r.children[s[e]].classList.add("attacked"),0==r.children[s[e]].children.length){let t=document.createElement("div");t.classList.add("ship-svg"),r.children[s[e]].appendChild(t),t.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><title>ship-wheel</title><path d="M2,11L4.05,11.1C4.3,8.83 5.5,6.85 7.25,5.56L6.13,3.84C5.86,3.36 6,2.75 6.5,2.47C7,2.2 7.59,2.36 7.87,2.84L8.8,4.66C9.78,4.24 10.86,4 12,4C13.14,4 14.22,4.24 15.2,4.66L16.13,2.84C16.41,2.36 17,2.2 17.5,2.47C18,2.75 18.14,3.36 17.87,3.84L16.75,5.56C18.5,6.85 19.7,8.83 19.95,11.1L22,11A1,1 0 0,1 23,12A1,1 0 0,1 22,13L19.95,12.9C19.7,15.17 18.5,17.15 16.75,18.44L17.87,20.16C18.14,20.64 18,21.25 17.5,21.53C17,21.8 16.41,21.64 16.13,21.16L15.2,19.34C14.22,19.76 13.14,20 12,20C10.86,20 9.78,19.76 8.8,19.34L7.87,21.16C7.59,21.64 7,21.8 6.5,21.53C6,21.25 5.86,20.64 6.13,20.16L7.25,18.44C5.5,17.15 4.3,15.17 4.05,12.9L2,13A1,1 0 0,1 1,12A1,1 0 0,1 2,11M9.07,11.35C9.2,10.74 9.53,10.2 10,9.79L8.34,7.25C7.11,8.19 6.27,9.6 6.05,11.2L9.07,11.35M12,9C12.32,9 12.62,9.05 12.9,9.14L14.28,6.45C13.58,6.16 12.81,6 12,6C11.19,6 10.42,6.16 9.72,6.45L11.1,9.14C11.38,9.05 11.68,9 12,9M14.93,11.35L17.95,11.2C17.73,9.6 16.89,8.19 15.66,7.25L14,9.79C14.47,10.2 14.8,10.74 14.93,11.35M14.93,12.65C14.8,13.26 14.47,13.8 14,14.21L15.66,16.75C16.89,15.81 17.73,14.4 17.95,12.8L14.93,12.65M12,15C11.68,15 11.38,14.95 11.09,14.86L9.72,17.55C10.42,17.84 11.19,18 12,18C12.81,18 13.58,17.84 14.28,17.55L12.91,14.86C12.62,14.95 12.32,15 12,15M9.07,12.65L6.05,12.8C6.27,14.4 7.11,15.81 8.34,16.75L10,14.21C9.53,13.8 9.2,13.26 9.07,12.65Z" /></svg>'}})),s.addEventListener("click",(()=>{for(;t.hasChildNodes();)t.removeChild(t.firstChild);for(;r.hasChildNodes();)r.removeChild(r.firstChild);i.createGameBoards()})),{createGameBoards:function(){for(let e=0;e<a.length;e++){let n=document.createElement("div");n.classList.add(e),n.classList.add(a[e].coordinates),n.classList.add("grid"),n.classList.add("player-board"),t.appendChild(n)}for(let e=0;e<l.length;e++){let t=document.createElement("div");t.classList.add(e),t.classList.add(l[e].coordinates),t.classList.add("grid"),t.classList.add("computer-board"),r.appendChild(t)}}}}();i.createGameBoards()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,